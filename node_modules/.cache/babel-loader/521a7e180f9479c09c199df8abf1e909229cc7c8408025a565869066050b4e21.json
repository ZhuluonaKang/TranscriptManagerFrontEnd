{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPage() {\n  _s();\n  const [uploadedFiles, setUploadedFiles] = useState([]); // 追踪文件列表\n  const [uploadStatus, setUploadStatus] = useState(''); // 总体上传状态\n  const [progress, setProgress] = useState({}); // 每个文件的上传进度\n  const maxFileSize = 5 * 1024 * 1024; // 5MB\n  const maxFileCount = 100;\n  const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png', 'text/csv']; // 允许的文件格式\n\n  const handleFileUpload = event => {\n    const files = Array.from(event.target.files);\n    if (files.length > maxFileCount) {\n      setUploadStatus(`Error: You can upload up to ${maxFileCount} files at a time.`);\n      return;\n    }\n    const invalidFiles = files.filter(file => !allowedTypes.includes(file.type) || file.size > maxFileSize);\n    if (invalidFiles.length > 0) {\n      const errors = invalidFiles.map(file => {\n        if (!allowedTypes.includes(file.type)) {\n          return `${file.name} has an unsupported format.`;\n        }\n        if (file.size > maxFileSize) {\n          return `${file.name} exceeds the maximum size of 5MB.`;\n        }\n        return null;\n      });\n      setUploadStatus(`Error:\\n${errors.join('\\n')}`);\n      return;\n    }\n    setUploadedFiles(files);\n    setUploadStatus('Uploading...');\n\n    // 初始化进度条\n    const progressMap = {};\n    files.forEach(file => progressMap[file.name] = 0);\n    setProgress(progressMap);\n\n    // 模拟上传过程（如果有后端 API，可以用 axios/fetch）\n    files.forEach((file, index) => {\n      simulateUpload(file);\n    });\n  };\n  const simulateUpload = file => {\n    const totalSteps = 10;\n    let step = 0;\n    const interval = setInterval(() => {\n      step += 1;\n      setProgress(prevProgress => ({\n        ...prevProgress,\n        [file.name]: step / totalSteps * 100 // 更新进度条\n      }));\n      if (step === totalSteps) {\n        clearInterval(interval);\n        setUploadStatus('Upload complete!');\n      }\n    }, 300); // 进度每 300ms 增加一次\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Transcripts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Allowed formats: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"PDF, JPG, PNG, CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }, this), \" | Maximum size: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"5MB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 85\n      }, this), \" | Max files: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf, .jpg, .jpeg, .png, .csv\",\n      multiple: true,\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: uploadStatus.startsWith('Error') ? 'error-text' : 'success-text',\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploading Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, \" (\", (file.size / 1024).toFixed(2), \" KB)\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: `${progress[file.name] || 0}%`\n              },\n              children: [Math.round(progress[file.name] || 0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPage, \"z66qcdFmh88Ff4Jy4lw8rHNxCWo=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPage","_s","uploadedFiles","setUploadedFiles","uploadStatus","setUploadStatus","progress","setProgress","maxFileSize","maxFileCount","allowedTypes","handleFileUpload","event","files","Array","from","target","length","invalidFiles","filter","file","includes","type","size","errors","map","name","join","progressMap","forEach","index","simulateUpload","totalSteps","step","interval","setInterval","prevProgress","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","multiple","onChange","startsWith","toFixed","style","width","Math","round","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles.css';\r\n\r\nfunction UploadPage() {\r\n    const [uploadedFiles, setUploadedFiles] = useState([]); // 追踪文件列表\r\n    const [uploadStatus, setUploadStatus] = useState(''); // 总体上传状态\r\n    const [progress, setProgress] = useState({}); // 每个文件的上传进度\r\n    const maxFileSize = 5 * 1024 * 1024; // 5MB\r\n    const maxFileCount = 100;\r\n    const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png', 'text/csv']; // 允许的文件格式\r\n\r\n    const handleFileUpload = (event) => {\r\n        const files = Array.from(event.target.files);\r\n        if (files.length > maxFileCount) {\r\n            setUploadStatus(`Error: You can upload up to ${maxFileCount} files at a time.`);\r\n            return;\r\n        }\r\n\r\n        const invalidFiles = files.filter(\r\n            (file) => !allowedTypes.includes(file.type) || file.size > maxFileSize\r\n        );\r\n\r\n        if (invalidFiles.length > 0) {\r\n            const errors = invalidFiles.map((file) => {\r\n                if (!allowedTypes.includes(file.type)) {\r\n                    return `${file.name} has an unsupported format.`;\r\n                }\r\n                if (file.size > maxFileSize) {\r\n                    return `${file.name} exceeds the maximum size of 5MB.`;\r\n                }\r\n                return null;\r\n            });\r\n            setUploadStatus(`Error:\\n${errors.join('\\n')}`);\r\n            return;\r\n        }\r\n\r\n        setUploadedFiles(files);\r\n        setUploadStatus('Uploading...');\r\n\r\n        // 初始化进度条\r\n        const progressMap = {};\r\n        files.forEach(file => progressMap[file.name] = 0);\r\n        setProgress(progressMap);\r\n\r\n        // 模拟上传过程（如果有后端 API，可以用 axios/fetch）\r\n        files.forEach((file, index) => {\r\n            simulateUpload(file);\r\n        });\r\n    };\r\n\r\n    const simulateUpload = (file) => {\r\n        const totalSteps = 10;\r\n        let step = 0;\r\n        const interval = setInterval(() => {\r\n            step += 1;\r\n            setProgress(prevProgress => ({\r\n                ...prevProgress,\r\n                [file.name]: (step / totalSteps) * 100 // 更新进度条\r\n            }));\r\n\r\n            if (step === totalSteps) {\r\n                clearInterval(interval);\r\n                setUploadStatus('Upload complete!');\r\n            }\r\n        }, 300); // 进度每 300ms 增加一次\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Upload Transcripts</h1>\r\n            <p>Allowed formats: <strong>PDF, JPG, PNG, CSV</strong> | Maximum size: <strong>5MB</strong> | Max files: <strong>100</strong></p>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".pdf, .jpg, .jpeg, .png, .csv\"\r\n                multiple\r\n                onChange={handleFileUpload}\r\n            />\r\n            {uploadStatus && (\r\n                <p className={uploadStatus.startsWith('Error') ? 'error-text' : 'success-text'}>\r\n                    {uploadStatus}\r\n                </p>\r\n            )}\r\n            {uploadedFiles.length > 0 && (\r\n                <div>\r\n                    <h3>Uploading Files:</h3>\r\n                    <ul>\r\n                        {uploadedFiles.map((file, index) => (\r\n                            <li key={index}>\r\n                                {file.name} ({(file.size / 1024).toFixed(2)} KB)\r\n                                <div className=\"progress-bar-container\">\r\n                                    <div\r\n                                        className=\"progress-bar\"\r\n                                        style={{ width: `${progress[file.name] || 0}%` }}\r\n                                    >\r\n                                        {Math.round(progress[file.name] || 0)}%\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
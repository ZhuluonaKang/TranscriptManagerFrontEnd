{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TableComponent from './components/TableComponent';\nimport SearchComponent from './components/SearchComponent';\nimport ExportButtons from './components/ExportButtons';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [data, setData] = useState([{\n    name: 'John Doe',\n    university: 'Example University',\n    program: 'Computer Science',\n    courseName: 'Data Structures',\n    courseCode: 'CS101',\n    grade: 'A'\n  }, {\n    name: 'Jane Smith',\n    university: 'Another University',\n    program: 'Mathematics',\n    courseName: 'Algebra',\n    courseCode: 'MATH201',\n    grade: 'B+'\n  }]);\n  const [originalData] = useState([...data]);\n  const handleSearch = () => {\n    const filteredData = originalData.filter(row => Object.values(row).some(value => value.toLowerCase().includes(searchQuery.toLowerCase())));\n    setData(filteredData);\n  };\n  const exportToCSV = () => {\n    const csvRows = [];\n    csvRows.push('Student Name,University,Program,Course Name,Course Code,Grade');\n    data.forEach(row => {\n      csvRows.push(`${row.name},${row.university},${row.program},${row.courseName},${row.courseCode},${row.grade}`);\n    });\n    const csvBlob = new Blob([csvRows.join('\\n')], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    saveAs(csvBlob, 'transcript.csv');\n  };\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const excelBlob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    saveAs(excelBlob, 'transcript.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transcript Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchComponent, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableComponent, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExportButtons, {\n      exportToCSV: exportToCSV,\n      exportToExcel: exportToExcel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"T+3Pcfa4KBnjEb3m8qm9WxzBiRM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TableComponent","SearchComponent","ExportButtons","saveAs","XLSX","jsxDEV","_jsxDEV","App","_s","searchQuery","setSearchQuery","data","setData","name","university","program","courseName","courseCode","grade","originalData","handleSearch","filteredData","filter","row","Object","values","some","value","toLowerCase","includes","exportToCSV","csvRows","push","forEach","csvBlob","Blob","join","type","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","excelBlob","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TableComponent from './components/TableComponent';\nimport SearchComponent from './components/SearchComponent';\nimport ExportButtons from './components/ExportButtons';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nfunction App() {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [data, setData] = useState([\n        { name: 'John Doe', university: 'Example University', program: 'Computer Science', courseName: 'Data Structures', courseCode: 'CS101', grade: 'A' },\n        { name: 'Jane Smith', university: 'Another University', program: 'Mathematics', courseName: 'Algebra', courseCode: 'MATH201', grade: 'B+' },\n    ]);\n    const [originalData] = useState([...data]);\n\n    const handleSearch = () => {\n        const filteredData = originalData.filter((row) =>\n            Object.values(row).some((value) =>\n                value.toLowerCase().includes(searchQuery.toLowerCase())\n            )\n        );\n        setData(filteredData);\n    };\n\n    const exportToCSV = () => {\n        const csvRows = [];\n        csvRows.push('Student Name,University,Program,Course Name,Course Code,Grade');\n        data.forEach((row) => {\n            csvRows.push(`${row.name},${row.university},${row.program},${row.courseName},${row.courseCode},${row.grade}`);\n        });\n        const csvBlob = new Blob([csvRows.join('\\n')], { type: 'text/csv;charset=utf-8;' });\n        saveAs(csvBlob, 'transcript.csv');\n    };\n\n    const exportToExcel = () => {\n        const worksheet = XLSX.utils.json_to_sheet(data);\n        const workbook = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n        const excelBlob = new Blob([excelBuffer], { type: 'application/octet-stream' });\n        saveAs(excelBlob, 'transcript.xlsx');\n    };\n\n    return (\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n            <h1>Transcript Manager</h1>\n            <SearchComponent\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n                handleSearch={handleSearch}\n            />\n            <TableComponent data={data} />\n            <ExportButtons exportToCSV={exportToCSV} exportToExcel={exportToExcel} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\TranscriptManagerFrontEnd\\\\src\\\\components\\\\SearchCriteria.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport { fetchCourseCategories } from '../apiServices';\nimport '../styles/SearchCriteria.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchCriteria({\n  criteria,\n  setCriteria,\n  handleSearch\n}) {\n  _s();\n  const [courseCategories, setCourseCategories] = useState([]);\n\n  // Fetch course categories only once and memoize them\n  const memoizedCategories = useMemo(async () => {\n    try {\n      const categories = await fetchCourseCategories();\n      return categories || [];\n    } catch (error) {\n      console.error(\"Failed to fetch course categories:\", error);\n      return [];\n    }\n  }, []); // Runs once on mount\n\n  // Store the fetched categories in state once\n  useEffect(() => {\n    memoizedCategories.then(setCourseCategories);\n  }, [memoizedCategories]);\n  const EDUCATION_LEVELS = ['Bachelor', 'Master', 'Doctorate'];\n\n  // Handles input change\n  const handleInputChange = (field, value) => {\n    setCriteria(prevData => ({\n      ...prevData,\n      [field]: value\n    }));\n  };\n\n  // Handles checkbox selection for education levels\n  const handleEducationChange = level => {\n    const updatedEducationLevels = criteria.educationLevel.includes(level) ? criteria.educationLevel.filter(item => item !== level) : [...criteria.educationLevel, level];\n    setCriteria({\n      ...criteria,\n      educationLevel: updatedEducationLevels\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      value: criteria.name,\n      onChange: e => handleInputChange('name', e.target.value),\n      placeholder: \"Enter a Faculty's Full Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown-select\",\n        value: criteria.courseCategory,\n        onChange: e => handleInputChange('courseCategory', e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a Course Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), courseCategories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox-title\",\n        children: \"Education Level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group\",\n        children: EDUCATION_LEVELS.map((level, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: level,\n            checked: criteria.educationLevel.includes(level),\n            onChange: () => handleEducationChange(level)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), level]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-btn\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n// Define prop types for type safety\n_s(SearchCriteria, \"wwu2t0SR6weKDQOpjlkQZCFnc8g=\");\n_c = SearchCriteria;\nSearchCriteria.propTypes = {\n  criteria: PropTypes.shape({\n    name: PropTypes.string,\n    courseCategory: PropTypes.string,\n    educationLevel: PropTypes.arrayOf(PropTypes.string)\n  }).isRequired,\n  setCriteria: PropTypes.func.isRequired,\n  handleSearch: PropTypes.func.isRequired\n};\nexport default SearchCriteria;\nvar _c;\n$RefreshReg$(_c, \"SearchCriteria\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","PropTypes","fetchCourseCategories","jsxDEV","_jsxDEV","SearchCriteria","criteria","setCriteria","handleSearch","_s","courseCategories","setCourseCategories","memoizedCategories","categories","error","console","then","EDUCATION_LEVELS","handleInputChange","field","value","prevData","handleEducationChange","level","updatedEducationLevels","educationLevel","includes","filter","item","className","children","type","name","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","courseCategory","map","category","index","checked","onClick","_c","propTypes","shape","string","arrayOf","isRequired","func","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/TranscriptManagerFrontEnd/src/components/SearchCriteria.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { fetchCourseCategories } from '../apiServices';\r\nimport '../styles/SearchCriteria.css';\r\n\r\nfunction SearchCriteria({ criteria, setCriteria, handleSearch }) {\r\n  const [courseCategories, setCourseCategories] = useState([]);\r\n\r\n  // Fetch course categories only once and memoize them\r\n  const memoizedCategories = useMemo(async () => {\r\n    try {\r\n      const categories = await fetchCourseCategories();\r\n      return categories || [];\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch course categories:\", error);\r\n      return [];\r\n    }\r\n  }, []); // Runs once on mount\r\n\r\n  // Store the fetched categories in state once\r\n  useEffect(() => {\r\n    memoizedCategories.then(setCourseCategories);\r\n  }, [memoizedCategories]);\r\n\r\n  const EDUCATION_LEVELS = ['Bachelor', 'Master', 'Doctorate'];\r\n\r\n  // Handles input change\r\n  const handleInputChange = (field, value) => {\r\n    setCriteria((prevData) => ({...prevData, [field]: value }));\r\n  };\r\n\r\n  // Handles checkbox selection for education levels\r\n  const handleEducationChange = (level) => {\r\n    const updatedEducationLevels = criteria.educationLevel.includes(level)\r\n      ? criteria.educationLevel.filter((item) => item !== level)\r\n      : [...criteria.educationLevel, level];\r\n\r\n    setCriteria({ ...criteria, educationLevel: updatedEducationLevels });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      {/* Search input for educator's name*/}\r\n      <input\r\n        type=\"text\"\r\n        className=\"search-input\"\r\n        value={criteria.name}\r\n        onChange={(e) => handleInputChange('name', e.target.value)}\r\n        placeholder=\"Enter a Faculty's Full Name\"\r\n      />\r\n\r\n      {/* Dropdown menu for course category */}\r\n      <div className=\"dropdown-container\">\r\n        <select\r\n          className=\"dropdown-select\"\r\n          value={criteria.courseCategory}\r\n          onChange={(e) => handleInputChange('courseCategory', e.target.value)}\r\n        >\r\n          <option value=\"\">Select a Course Category</option>\r\n          {courseCategories.map((category, index) => (\r\n            <option key={index} value={category}>\r\n              {category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Checkbox group for selecting education levels */}\r\n      <div className=\"checkbox-container\">\r\n        <label className=\"checkbox-title\">Education Level:</label>\r\n        <div className=\"checkbox-group\">\r\n          {EDUCATION_LEVELS.map((level, index) => (\r\n            <label key={index} className=\"checkbox-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={level}\r\n                checked={criteria.educationLevel.includes(level)}\r\n                onChange={() => handleEducationChange(level)}\r\n              />\r\n              {level}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search button */}\r\n      <button className=\"search-btn\" onClick={handleSearch}>\r\n        Search\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define prop types for type safety\r\nSearchCriteria.propTypes = {\r\n  criteria: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    courseCategory: PropTypes.string,\r\n    educationLevel: PropTypes.arrayOf(PropTypes.string),\r\n  }).isRequired,\r\n  setCriteria: PropTypes.func.isRequired,\r\n  handleSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchCriteria;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
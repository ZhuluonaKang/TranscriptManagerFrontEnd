{"ast":null,"code":"// src/api.js\nexport const mockData = [{\n  educatorname: 'Dr. Smith',\n  course_name: 'Leadership Theory',\n  credits_earned: 3,\n  grade: 'B+',\n  should_be_category: 'Management'\n}, {\n  educatorname: 'Dr. Smith',\n  course_name: 'Program Evaluation',\n  credits_earned: 3,\n  grade: 'B',\n  should_be_category: 'Research/Stats'\n}, {\n  educatorname: 'Dr. Johnson',\n  course_name: 'Finance Principles',\n  credits_earned: 4,\n  grade: 'A',\n  should_be_category: 'Finance'\n}, {\n  educatorname: 'Dr. Johnson',\n  course_name: 'Advanced Accounting',\n  credits_earned: 3,\n  grade: 'A-',\n  should_be_category: 'Accounting'\n}, {\n  educatorname: 'Dr. Lee',\n  course_name: 'Quantitative Research',\n  credits_earned: 2,\n  grade: 'B+',\n  should_be_category: 'Research/Stats'\n}, {\n  educatorname: 'Dr. Lee',\n  course_name: 'Economics in Business',\n  credits_earned: 3,\n  grade: 'A',\n  should_be_category: 'Economics'\n}, {\n  educatorname: 'Prof. Miller',\n  course_name: 'Marketing Strategies',\n  credits_earned: 3,\n  grade: 'A-',\n  should_be_category: 'Marketing'\n}, {\n  educatorname: 'Prof. Miller',\n  course_name: 'Consumer Behavior',\n  credits_earned: 2,\n  grade: 'B+',\n  should_be_category: 'Marketing'\n}, {\n  educatorname: 'Dr. Brown',\n  course_name: 'Data Science for Business',\n  credits_earned: 4,\n  grade: 'A+',\n  should_be_category: 'IT General'\n}, {\n  educatorname: 'Dr. Brown',\n  course_name: 'Machine Learning Basics',\n  credits_earned: 3,\n  grade: 'A',\n  should_be_category: 'IT General'\n}, {\n  educatorname: 'Dr. Green',\n  course_name: 'Project Management',\n  credits_earned: 3,\n  grade: 'B',\n  should_be_category: 'Project Mgmt'\n}, {\n  educatorname: 'Dr. Green',\n  course_name: 'Operations Strategy',\n  credits_earned: 2,\n  grade: 'A-',\n  should_be_category: 'Operations Mgmt'\n}];\n\n// 模拟 API 获取所有数据\nexport const fetchExistingData = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 500); // 模拟 500ms 延迟\n  });\n};\n\n// 模拟 API 查询数据\nexport const querySearchData = async ({\n  query,\n  category\n}) => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const filteredData = mockData.filter(item => {\n        const matchesQuery = query ? Object.values(item).some(value => value.toString().toLowerCase().includes(query.toLowerCase())) : true;\n        const matchesCategory = category ? item.should_be_category === category : true;\n        return matchesQuery && matchesCategory;\n      });\n      resolve(filteredData);\n    }, 300); // 模拟 300ms 延迟\n  });\n};","map":{"version":3,"names":["mockData","educatorname","course_name","credits_earned","grade","should_be_category","fetchExistingData","Promise","resolve","setTimeout","querySearchData","query","category","filteredData","filter","item","matchesQuery","Object","values","some","value","toString","toLowerCase","includes","matchesCategory"],"sources":["C:/Users/76064/transcript-manager/src/api.js"],"sourcesContent":["// src/api.js\r\nexport const mockData = [\r\n    { educatorname: 'Dr. Smith', course_name: 'Leadership Theory', credits_earned: 3, grade: 'B+', should_be_category: 'Management' },\r\n    { educatorname: 'Dr. Smith', course_name: 'Program Evaluation', credits_earned: 3, grade: 'B', should_be_category: 'Research/Stats' },\r\n    { educatorname: 'Dr. Johnson', course_name: 'Finance Principles', credits_earned: 4, grade: 'A', should_be_category: 'Finance' },\r\n    { educatorname: 'Dr. Johnson', course_name: 'Advanced Accounting', credits_earned: 3, grade: 'A-', should_be_category: 'Accounting' },\r\n    { educatorname: 'Dr. Lee', course_name: 'Quantitative Research', credits_earned: 2, grade: 'B+', should_be_category: 'Research/Stats' },\r\n    { educatorname: 'Dr. Lee', course_name: 'Economics in Business', credits_earned: 3, grade: 'A', should_be_category: 'Economics' },\r\n    { educatorname: 'Prof. Miller', course_name: 'Marketing Strategies', credits_earned: 3, grade: 'A-', should_be_category: 'Marketing' },\r\n    { educatorname: 'Prof. Miller', course_name: 'Consumer Behavior', credits_earned: 2, grade: 'B+', should_be_category: 'Marketing' },\r\n    { educatorname: 'Dr. Brown', course_name: 'Data Science for Business', credits_earned: 4, grade: 'A+', should_be_category: 'IT General' },\r\n    { educatorname: 'Dr. Brown', course_name: 'Machine Learning Basics', credits_earned: 3, grade: 'A', should_be_category: 'IT General' },\r\n    { educatorname: 'Dr. Green', course_name: 'Project Management', credits_earned: 3, grade: 'B', should_be_category: 'Project Mgmt' },\r\n    { educatorname: 'Dr. Green', course_name: 'Operations Strategy', credits_earned: 2, grade: 'A-', should_be_category: 'Operations Mgmt' }\r\n];\r\n\r\n// 模拟 API 获取所有数据\r\nexport const fetchExistingData = async () => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(mockData);\r\n        }, 500); // 模拟 500ms 延迟\r\n    });\r\n};\r\n\r\n// 模拟 API 查询数据\r\nexport const querySearchData = async ({ query, category }) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            const filteredData = mockData.filter((item) => {\r\n                const matchesQuery = query ? \r\n                    Object.values(item).some(value => \r\n                        value.toString().toLowerCase().includes(query.toLowerCase())\r\n                    ) : true;\r\n\r\n                const matchesCategory = category ? item.should_be_category === category : true;\r\n\r\n                return matchesQuery && matchesCategory;\r\n            });\r\n            resolve(filteredData);\r\n        }, 300); // 模拟 300ms 延迟\r\n    });\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
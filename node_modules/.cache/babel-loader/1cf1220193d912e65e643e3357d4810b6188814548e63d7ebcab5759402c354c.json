{"ast":null,"code":"export const mockData = [{\n  educatorname: 'Dr. Smith',\n  course_name: 'Leadership Theory',\n  credits_earned: 3,\n  grade: 'B+',\n  should_be_category: 'Management',\n  education_level: 'Doctorate'\n}, {\n  educatorname: 'Dr. Smith',\n  course_name: 'Program Evaluation',\n  credits_earned: 3,\n  grade: 'B',\n  should_be_category: 'Research/Stats',\n  education_level: 'Doctorate'\n}, {\n  educatorname: 'Dr. Johnson',\n  course_name: 'Finance Principles',\n  credits_earned: 4,\n  grade: 'A',\n  should_be_category: 'Finance',\n  education_level: 'Master'\n}, {\n  educatorname: 'Dr. Johnson',\n  course_name: 'Advanced Accounting',\n  credits_earned: 3,\n  grade: 'A-',\n  should_be_category: 'Accounting',\n  education_level: 'Master'\n}, {\n  educatorname: 'Prof. Miller',\n  course_name: 'Marketing Strategies',\n  credits_earned: 3,\n  grade: 'A-',\n  should_be_category: 'Marketing',\n  education_level: 'Bachelor'\n}];\n\n// **修复 fetchExistingData**\nexport const fetchExistingData = async () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(mockData);\n    }, 500);\n  });\n};\n\n// **修复 querySearchData**\nexport const querySearchData = async ({\n  query,\n  category,\n  education\n}) => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      const filteredData = mockData.filter(item => {\n        const matchesQuery = query ? Object.values(item).some(value => value.toString().toLowerCase().includes(query.toLowerCase())) : true;\n        const matchesCategory = category ? item.should_be_category === category : true;\n        const matchesEducation = education.length > 0 ? education.includes(item.education_level) : true;\n        return matchesQuery && matchesCategory && matchesEducation;\n      });\n      resolve(filteredData);\n    }, 300);\n  });\n};","map":{"version":3,"names":["mockData","educatorname","course_name","credits_earned","grade","should_be_category","education_level","fetchExistingData","Promise","resolve","setTimeout","querySearchData","query","category","education","filteredData","filter","item","matchesQuery","Object","values","some","value","toString","toLowerCase","includes","matchesCategory","matchesEducation","length"],"sources":["C:/Users/76064/transcript-manager/src/api.js"],"sourcesContent":["export const mockData = [\r\n    { educatorname: 'Dr. Smith', course_name: 'Leadership Theory', credits_earned: 3, grade: 'B+', should_be_category: 'Management', education_level: 'Doctorate' },\r\n    { educatorname: 'Dr. Smith', course_name: 'Program Evaluation', credits_earned: 3, grade: 'B', should_be_category: 'Research/Stats', education_level: 'Doctorate' },\r\n    { educatorname: 'Dr. Johnson', course_name: 'Finance Principles', credits_earned: 4, grade: 'A', should_be_category: 'Finance', education_level: 'Master' },\r\n    { educatorname: 'Dr. Johnson', course_name: 'Advanced Accounting', credits_earned: 3, grade: 'A-', should_be_category: 'Accounting', education_level: 'Master' },\r\n    { educatorname: 'Prof. Miller', course_name: 'Marketing Strategies', credits_earned: 3, grade: 'A-', should_be_category: 'Marketing', education_level: 'Bachelor' },\r\n];\r\n\r\n// **修复 fetchExistingData**\r\nexport const fetchExistingData = async () => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(mockData);\r\n        }, 500);\r\n    });\r\n};\r\n\r\n// **修复 querySearchData**\r\nexport const querySearchData = async ({ query, category, education }) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            const filteredData = mockData.filter((item) => {\r\n                const matchesQuery = query ? \r\n                    Object.values(item).some(value => \r\n                        value.toString().toLowerCase().includes(query.toLowerCase())\r\n                    ) : true;\r\n\r\n                const matchesCategory = category ? item.should_be_category === category : true;\r\n\r\n                const matchesEducation = education.length > 0 ? education.includes(item.education_level) : true;\r\n\r\n                return matchesQuery && matchesCategory && matchesEducation;\r\n            });\r\n            resolve(filteredData);\r\n        }, 300);\r\n    });\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,CACpB;EAAEC,YAAY,EAAE,WAAW;EAAEC,WAAW,EAAE,mBAAmB;EAAEC,cAAc,EAAE,CAAC;EAAEC,KAAK,EAAE,IAAI;EAAEC,kBAAkB,EAAE,YAAY;EAAEC,eAAe,EAAE;AAAY,CAAC,EAC/J;EAAEL,YAAY,EAAE,WAAW;EAAEC,WAAW,EAAE,oBAAoB;EAAEC,cAAc,EAAE,CAAC;EAAEC,KAAK,EAAE,GAAG;EAAEC,kBAAkB,EAAE,gBAAgB;EAAEC,eAAe,EAAE;AAAY,CAAC,EACnK;EAAEL,YAAY,EAAE,aAAa;EAAEC,WAAW,EAAE,oBAAoB;EAAEC,cAAc,EAAE,CAAC;EAAEC,KAAK,EAAE,GAAG;EAAEC,kBAAkB,EAAE,SAAS;EAAEC,eAAe,EAAE;AAAS,CAAC,EAC3J;EAAEL,YAAY,EAAE,aAAa;EAAEC,WAAW,EAAE,qBAAqB;EAAEC,cAAc,EAAE,CAAC;EAAEC,KAAK,EAAE,IAAI;EAAEC,kBAAkB,EAAE,YAAY;EAAEC,eAAe,EAAE;AAAS,CAAC,EAChK;EAAEL,YAAY,EAAE,cAAc;EAAEC,WAAW,EAAE,sBAAsB;EAAEC,cAAc,EAAE,CAAC;EAAEC,KAAK,EAAE,IAAI;EAAEC,kBAAkB,EAAE,WAAW;EAAEC,eAAe,EAAE;AAAW,CAAC,CACtK;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACzC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC5BC,UAAU,CAAC,MAAM;MACbD,OAAO,CAACT,QAAQ,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMW,eAAe,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EACrE,OAAO,IAAIN,OAAO,CAAEC,OAAO,IAAK;IAC5BC,UAAU,CAAC,MAAM;MACb,MAAMK,YAAY,GAAGf,QAAQ,CAACgB,MAAM,CAAEC,IAAI,IAAK;QAC3C,MAAMC,YAAY,GAAGN,KAAK,GACtBO,MAAM,CAACC,MAAM,CAACH,IAAI,CAAC,CAACI,IAAI,CAACC,KAAK,IAC1BA,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACb,KAAK,CAACY,WAAW,CAAC,CAAC,CAC/D,CAAC,GAAG,IAAI;QAEZ,MAAME,eAAe,GAAGb,QAAQ,GAAGI,IAAI,CAACZ,kBAAkB,KAAKQ,QAAQ,GAAG,IAAI;QAE9E,MAAMc,gBAAgB,GAAGb,SAAS,CAACc,MAAM,GAAG,CAAC,GAAGd,SAAS,CAACW,QAAQ,CAACR,IAAI,CAACX,eAAe,CAAC,GAAG,IAAI;QAE/F,OAAOY,YAAY,IAAIQ,eAAe,IAAIC,gBAAgB;MAC9D,CAAC,CAAC;MACFlB,OAAO,CAACM,YAAY,CAAC;IACzB,CAAC,EAAE,GAAG,CAAC;EACX,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPage() {\n  _s();\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const maxFileSize = 5 * 1024 * 1024; // 5MB\n  const maxFileCount = 100;\n  const handleFileUpload = event => {\n    const files = Array.from(event.target.files);\n    const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png', 'text/csv']; // 加入 CSV 格式\n\n    if (files.length > maxFileCount) {\n      setUploadStatus(`Error: You can upload up to ${maxFileCount} files at a time.`);\n      return;\n    }\n    const invalidFiles = files.filter(file => !allowedTypes.includes(file.type) || file.size > maxFileSize);\n    if (invalidFiles.length > 0) {\n      const errors = invalidFiles.map(file => {\n        if (!allowedTypes.includes(file.type)) {\n          return `${file.name} has an unsupported format.`;\n        }\n        if (file.size > maxFileSize) {\n          return `${file.name} exceeds the maximum size of 5MB.`;\n        }\n        return null;\n      });\n      setUploadStatus(`Error:\\n${errors.join('\\n')}`);\n      return;\n    }\n    setUploadedFiles(files);\n    setUploadStatus('Upload successful!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Transcripts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Allowed formats: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"PDF, JPG, PNG, CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this), \" | Maximum size: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"5MB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 85\n      }, this), \" | Max files: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 119\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf, .jpg, .jpeg, .png, .csv\" // 更新 `accept` 允许 CSV\n      ,\n      multiple: true,\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: uploadStatus.startsWith('Error') ? 'error-text' : 'success-text',\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, \" (\", (file.size / 1024).toFixed(2), \" KB)\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPage, \"7TpUSh0aJpzZM3GPiTXT0u8Cv/k=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPage","_s","uploadStatus","setUploadStatus","uploadedFiles","setUploadedFiles","maxFileSize","maxFileCount","handleFileUpload","event","files","Array","from","target","allowedTypes","length","invalidFiles","filter","file","includes","type","size","errors","map","name","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","multiple","onChange","startsWith","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles.css';\r\n\r\nfunction UploadPage() {\r\n    const [uploadStatus, setUploadStatus] = useState('');\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const maxFileSize = 5 * 1024 * 1024; // 5MB\r\n    const maxFileCount = 100;\r\n\r\n    const handleFileUpload = (event) => {\r\n        const files = Array.from(event.target.files);\r\n        const allowedTypes = ['application/pdf', 'image/jpeg', 'image/png', 'text/csv']; // 加入 CSV 格式\r\n\r\n        if (files.length > maxFileCount) {\r\n            setUploadStatus(`Error: You can upload up to ${maxFileCount} files at a time.`);\r\n            return;\r\n        }\r\n\r\n        const invalidFiles = files.filter(\r\n            (file) => !allowedTypes.includes(file.type) || file.size > maxFileSize\r\n        );\r\n        if (invalidFiles.length > 0) {\r\n            const errors = invalidFiles.map((file) => {\r\n                if (!allowedTypes.includes(file.type)) {\r\n                    return `${file.name} has an unsupported format.`;\r\n                }\r\n                if (file.size > maxFileSize) {\r\n                    return `${file.name} exceeds the maximum size of 5MB.`;\r\n                }\r\n                return null;\r\n            });\r\n            setUploadStatus(`Error:\\n${errors.join('\\n')}`);\r\n            return;\r\n        }\r\n\r\n        setUploadedFiles(files);\r\n        setUploadStatus('Upload successful!');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Upload Transcripts</h1>\r\n            <p>Allowed formats: <strong>PDF, JPG, PNG, CSV</strong> | Maximum size: <strong>5MB</strong> | Max files: <strong>100</strong></p>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".pdf, .jpg, .jpeg, .png, .csv\" // 更新 `accept` 允许 CSV\r\n                multiple\r\n                onChange={handleFileUpload}\r\n            />\r\n            {uploadStatus && (\r\n                <p className={uploadStatus.startsWith('Error') ? 'error-text' : 'success-text'}>\r\n                    {uploadStatus}\r\n                </p>\r\n            )}\r\n            {uploadedFiles.length > 0 && (\r\n                <div>\r\n                    <h3>Uploaded Files:</h3>\r\n                    <ul>\r\n                        {uploadedFiles.map((file, index) => (\r\n                            <li key={index}>\r\n                                {file.name} ({(file.size / 1024).toFixed(2)} KB)\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
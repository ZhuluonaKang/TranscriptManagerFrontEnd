{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { saveAs } from 'file-saver'; // 用于保存文件\nimport * as XLSX from 'xlsx'; // 用于生成 Excel 文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([{\n    name: 'John Doe',\n    university: 'Example University',\n    program: 'Computer Science',\n    courseName: 'Data Structures',\n    courseCode: 'CS101',\n    grade: 'A'\n  }, {\n    name: 'Jane Smith',\n    university: 'Another University',\n    program: 'Mathematics',\n    courseName: 'Algebra',\n    courseCode: 'MATH201',\n    grade: 'B+'\n  }]);\n\n  // 导出 CSV 文件\n  const exportToCSV = () => {\n    const csvRows = [];\n    // 添加表头\n    csvRows.push('Student Name,University,Program,Course Name,Course Code,Grade');\n    // 添加数据\n    data.forEach(row => {\n      csvRows.push(`${row.name},${row.university},${row.program},${row.courseName},${row.courseCode},${row.grade}`);\n    });\n    // 创建 Blob 文件\n    const csvBlob = new Blob([csvRows.join('\\n')], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    saveAs(csvBlob, 'transcript.csv'); // 文件名为 transcript.csv\n  };\n\n  // 导出 Excel 文件\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(data); // 将数据转换为工作表\n    const workbook = XLSX.utils.book_new(); // 创建工作簿\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts'); // 将工作表添加到工作簿\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    }); // 转换为 Excel 文件\n    const excelBlob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    saveAs(excelBlob, 'transcript.xlsx'); // 文件名为 transcript.xlsx\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transcript Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        margin: '20px auto',\n        width: '80%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Program\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Grade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.university\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.program\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.courseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.courseCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row.grade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToCSV,\n      style: {\n        marginRight: '10px',\n        padding: '10px 20px'\n      },\n      children: \"Export CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToExcel,\n      style: {\n        padding: '10px 20px'\n      },\n      children: \"Export Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"geprtvYajlXz05QvW9nfxjq/tz4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","saveAs","XLSX","jsxDEV","_jsxDEV","App","_s","data","setData","name","university","program","courseName","courseCode","grade","exportToCSV","csvRows","push","forEach","row","csvBlob","Blob","join","type","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","excelBlob","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","margin","width","map","index","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { saveAs } from 'file-saver'; // 用于保存文件\nimport * as XLSX from 'xlsx'; // 用于生成 Excel 文件\n\nfunction App() {\n    const [data, setData] = useState([\n        { name: 'John Doe', university: 'Example University', program: 'Computer Science', courseName: 'Data Structures', courseCode: 'CS101', grade: 'A' },\n        { name: 'Jane Smith', university: 'Another University', program: 'Mathematics', courseName: 'Algebra', courseCode: 'MATH201', grade: 'B+' },\n    ]);\n\n    // 导出 CSV 文件\n    const exportToCSV = () => {\n        const csvRows = [];\n        // 添加表头\n        csvRows.push('Student Name,University,Program,Course Name,Course Code,Grade');\n        // 添加数据\n        data.forEach((row) => {\n            csvRows.push(`${row.name},${row.university},${row.program},${row.courseName},${row.courseCode},${row.grade}`);\n        });\n        // 创建 Blob 文件\n        const csvBlob = new Blob([csvRows.join('\\n')], { type: 'text/csv;charset=utf-8;' });\n        saveAs(csvBlob, 'transcript.csv'); // 文件名为 transcript.csv\n    };\n\n    // 导出 Excel 文件\n    const exportToExcel = () => {\n        const worksheet = XLSX.utils.json_to_sheet(data); // 将数据转换为工作表\n        const workbook = XLSX.utils.book_new(); // 创建工作簿\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts'); // 将工作表添加到工作簿\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' }); // 转换为 Excel 文件\n        const excelBlob = new Blob([excelBuffer], { type: 'application/octet-stream' });\n        saveAs(excelBlob, 'transcript.xlsx'); // 文件名为 transcript.xlsx\n    };\n\n    return (\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n            <h1>Transcript Manager</h1>\n            <table border=\"1\" style={{ margin: '20px auto', width: '80%' }}>\n                <thead>\n                    <tr>\n                        <th>Student Name</th>\n                        <th>University</th>\n                        <th>Program</th>\n                        <th>Course Name</th>\n                        <th>Course Code</th>\n                        <th>Grade</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((row, index) => (\n                        <tr key={index}>\n                            <td>{row.name}</td>\n                            <td>{row.university}</td>\n                            <td>{row.program}</td>\n                            <td>{row.courseName}</td>\n                            <td>{row.courseCode}</td>\n                            <td>{row.grade}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <button onClick={exportToCSV} style={{ marginRight: '10px', padding: '10px 20px' }}>Export CSV</button>\n            <button onClick={exportToExcel} style={{ padding: '10px 20px' }}>Export Excel</button>\n        </div>\n    );\n}\n\nexport default App;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,YAAY,CAAC,CAAC;AACrC,OAAO,KAAKC,IAAI,MAAM,MAAM,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAC7B;IAAES,IAAI,EAAE,UAAU;IAAEC,UAAU,EAAE,oBAAoB;IAAEC,OAAO,EAAE,kBAAkB;IAAEC,UAAU,EAAE,iBAAiB;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EACnJ;IAAEL,IAAI,EAAE,YAAY;IAAEC,UAAU,EAAE,oBAAoB;IAAEC,OAAO,EAAE,aAAa;IAAEC,UAAU,EAAE,SAAS;IAAEC,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAK,CAAC,CAC9I,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,OAAO,GAAG,EAAE;IAClB;IACAA,OAAO,CAACC,IAAI,CAAC,+DAA+D,CAAC;IAC7E;IACAV,IAAI,CAACW,OAAO,CAAEC,GAAG,IAAK;MAClBH,OAAO,CAACC,IAAI,CAAC,GAAGE,GAAG,CAACV,IAAI,IAAIU,GAAG,CAACT,UAAU,IAAIS,GAAG,CAACR,OAAO,IAAIQ,GAAG,CAACP,UAAU,IAAIO,GAAG,CAACN,UAAU,IAAIM,GAAG,CAACL,KAAK,EAAE,CAAC;IACjH,CAAC,CAAC;IACF;IACA,MAAMM,OAAO,GAAG,IAAIC,IAAI,CAAC,CAACL,OAAO,CAACM,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;MAAEC,IAAI,EAAE;IAA0B,CAAC,CAAC;IACnFtB,MAAM,CAACmB,OAAO,EAAE,gBAAgB,CAAC,CAAC,CAAC;EACvC,CAAC;;EAED;EACA,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAGvB,IAAI,CAACwB,KAAK,CAACC,aAAa,CAACpB,IAAI,CAAC,CAAC,CAAC;IAClD,MAAMqB,QAAQ,GAAG1B,IAAI,CAACwB,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxC3B,IAAI,CAACwB,KAAK,CAACI,iBAAiB,CAACF,QAAQ,EAAEH,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC;IAClE,MAAMM,WAAW,GAAG7B,IAAI,CAAC8B,KAAK,CAACJ,QAAQ,EAAE;MAAEK,QAAQ,EAAE,MAAM;MAAEV,IAAI,EAAE;IAAQ,CAAC,CAAC,CAAC,CAAC;IAC/E,MAAMW,SAAS,GAAG,IAAIb,IAAI,CAAC,CAACU,WAAW,CAAC,EAAE;MAAER,IAAI,EAAE;IAA2B,CAAC,CAAC;IAC/EtB,MAAM,CAACiC,SAAS,EAAE,iBAAiB,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,oBACI9B,OAAA;IAAK+B,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjDlC,OAAA;MAAAkC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BtC,OAAA;MAAOuC,MAAM,EAAC,GAAG;MAACR,KAAK,EAAE;QAAES,MAAM,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAP,QAAA,gBAC3DlC,OAAA;QAAAkC,QAAA,eACIlC,OAAA;UAAAkC,QAAA,gBACIlC,OAAA;YAAAkC,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBtC,OAAA;YAAAkC,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBtC,OAAA;YAAAkC,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBtC,OAAA;YAAAkC,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBtC,OAAA;YAAAkC,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBtC,OAAA;YAAAkC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRtC,OAAA;QAAAkC,QAAA,EACK/B,IAAI,CAACuC,GAAG,CAAC,CAAC3B,GAAG,EAAE4B,KAAK,kBACjB3C,OAAA;UAAAkC,QAAA,gBACIlC,OAAA;YAAAkC,QAAA,EAAKnB,GAAG,CAACV;UAAI;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBtC,OAAA;YAAAkC,QAAA,EAAKnB,GAAG,CAACT;UAAU;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBtC,OAAA;YAAAkC,QAAA,EAAKnB,GAAG,CAACR;UAAO;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBtC,OAAA;YAAAkC,QAAA,EAAKnB,GAAG,CAACP;UAAU;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBtC,OAAA;YAAAkC,QAAA,EAAKnB,GAAG,CAACN;UAAU;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBtC,OAAA;YAAAkC,QAAA,EAAKnB,GAAG,CAACL;UAAK;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GANfK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRtC,OAAA;MAAQ4C,OAAO,EAAEjC,WAAY;MAACoB,KAAK,EAAE;QAAEc,WAAW,EAAE,MAAM;QAAEZ,OAAO,EAAE;MAAY,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvGtC,OAAA;MAAQ4C,OAAO,EAAExB,aAAc;MAACW,KAAK,EAAE;QAAEE,OAAO,EAAE;MAAY,CAAE;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEd;AAACpC,EAAA,CA7DQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
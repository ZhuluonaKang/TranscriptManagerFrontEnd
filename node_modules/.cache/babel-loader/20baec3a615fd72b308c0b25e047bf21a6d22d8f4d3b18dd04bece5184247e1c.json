{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\components\\\\ExportButtons.js\";\nimport React from 'react';\nimport { CSVLink } from 'react-csv';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportButtons = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available to export.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  }\n\n  // 定义 CSV 头部\n  const headers = [{\n    label: 'Educator',\n    key: 'educatorname'\n  }, {\n    label: 'Course Name',\n    key: 'course_name'\n  }, {\n    label: 'Credits Earned',\n    key: 'credits_earned'\n  }, {\n    label: 'Grade',\n    key: 'grade'\n  }, {\n    label: 'Category',\n    key: 'should_be_category'\n  }];\n\n  // 处理 Excel 导出\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\n\n    // 生成 Excel 文件并下载\n    XLSX.writeFile(workbook, 'exported_data.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"export-container\",\n    children: [/*#__PURE__*/_jsxDEV(CSVLink, {\n      data: data,\n      headers: headers,\n      filename: \"exported_data.csv\",\n      className: \"export-btn\",\n      children: \"Export as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"export-btn\",\n      onClick: exportToExcel,\n      children: \"Export as Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = ExportButtons;\nexport default ExportButtons;\nvar _c;\n$RefreshReg$(_c, \"ExportButtons\");","map":{"version":3,"names":["React","CSVLink","XLSX","jsxDEV","_jsxDEV","ExportButtons","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","headers","label","key","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","className","filename","onClick","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/components/ExportButtons.js"],"sourcesContent":["import React from 'react';\r\nimport { CSVLink } from 'react-csv';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ExportButtons = ({ data }) => {\r\n    if (!data || data.length === 0) {\r\n        return <p>No data available to export.</p>;\r\n    }\r\n\r\n    // 定义 CSV 头部\r\n    const headers = [\r\n        { label: 'Educator', key: 'educatorname' },\r\n        { label: 'Course Name', key: 'course_name' },\r\n        { label: 'Credits Earned', key: 'credits_earned' },\r\n        { label: 'Grade', key: 'grade' },\r\n        { label: 'Category', key: 'should_be_category' }\r\n    ];\r\n\r\n    // 处理 Excel 导出\r\n    const exportToExcel = () => {\r\n        const worksheet = XLSX.utils.json_to_sheet(data);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\r\n\r\n        // 生成 Excel 文件并下载\r\n        XLSX.writeFile(workbook, 'exported_data.xlsx');\r\n    };\r\n\r\n    return (\r\n        <div className=\"export-container\">\r\n            {/* 导出 CSV */}\r\n            <CSVLink\r\n                data={data}\r\n                headers={headers}\r\n                filename=\"exported_data.csv\"\r\n                className=\"export-btn\"\r\n            >\r\n                Export as CSV\r\n            </CSVLink>\r\n\r\n            {/* 导出 Excel */}\r\n            <button className=\"export-btn\" onClick={exportToExcel}>\r\n                Export as Excel\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExportButtons;\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAOH,OAAA;MAAAI,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9C;;EAEA;EACA,MAAMC,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE,UAAU;IAAEC,GAAG,EAAE;EAAe,CAAC,EAC1C;IAAED,KAAK,EAAE,aAAa;IAAEC,GAAG,EAAE;EAAc,CAAC,EAC5C;IAAED,KAAK,EAAE,gBAAgB;IAAEC,GAAG,EAAE;EAAiB,CAAC,EAClD;IAAED,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAChC;IAAED,KAAK,EAAE,UAAU;IAAEC,GAAG,EAAE;EAAqB,CAAC,CACnD;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAGf,IAAI,CAACgB,KAAK,CAACC,aAAa,CAACb,IAAI,CAAC;IAChD,MAAMc,QAAQ,GAAGlB,IAAI,CAACgB,KAAK,CAACG,QAAQ,CAAC,CAAC;IACtCnB,IAAI,CAACgB,KAAK,CAACI,iBAAiB,CAACF,QAAQ,EAAEH,SAAS,EAAE,aAAa,CAAC;;IAEhE;IACAf,IAAI,CAACqB,SAAS,CAACH,QAAQ,EAAE,oBAAoB,CAAC;EAClD,CAAC;EAED,oBACIhB,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAhB,QAAA,gBAE7BJ,OAAA,CAACH,OAAO;MACJK,IAAI,EAAEA,IAAK;MACXO,OAAO,EAAEA,OAAQ;MACjBY,QAAQ,EAAC,mBAAmB;MAC5BD,SAAS,EAAC,YAAY;MAAAhB,QAAA,EACzB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAGVR,OAAA;MAAQoB,SAAS,EAAC,YAAY;MAACE,OAAO,EAAEV,aAAc;MAAAR,QAAA,EAAC;IAEvD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACe,EAAA,GA1CItB,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
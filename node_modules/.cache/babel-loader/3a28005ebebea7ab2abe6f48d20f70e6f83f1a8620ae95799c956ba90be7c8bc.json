{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\TranscriptManagerFrontEnd\\\\src\\\\components\\\\ResultTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/ResultTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultTable = ({\n  data,\n  totalEducators\n}) => {\n  const {\n    queried_data,\n    educator_name,\n    notes\n  } = data;\n  if (!queried_data || queried_data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-results\",\n      children: \"No results to display. Make sure the correct name is entered or try searching with different criteria.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Function to count the total number of valid \"Course Details\" (excluding \"N/A\")\n  const totalCourseDetails = queried_data.reduce((count, row) => row[\"Course Details\"] !== \"N/A\" ? count + 1 : count, 0);\n\n  // Function to format notes into multiple lines (Splitting at numbers or manually adding breaks)\n  const formattedNotes = notes.replace(/(\\d+\\.)/g, \"\\n$1\").split(\"\\n\").map((line, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: line.trim()\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 27\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"educator-label\",\n      children: educator_name ? educator_name : `Total Unique Faculties: ${totalEducators}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"result-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Course Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: queried_data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Category\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"Course Details\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-course-count\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Valid Courses: \", totalCourseDetails]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), formattedNotes && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: formattedNotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n// Define prop types for type safety\n_c = ResultTable;\nResultTable.propTypes = {\n  data: PropTypes.shape({\n    educator_name: PropTypes.string,\n    queried_data: PropTypes.arrayOf(PropTypes.shape({\n      Category: PropTypes.string.isRequired,\n      \"Course Details\": PropTypes.string.isRequired\n    })),\n    notes: PropTypes.string\n  }).isRequired,\n  totalEducators: PropTypes.number.isRequired\n};\nexport default ResultTable;\nvar _c;\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","ResultTable","data","totalEducators","queried_data","educator_name","notes","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalCourseDetails","reduce","count","row","formattedNotes","replace","split","map","line","index","trim","_c","propTypes","shape","string","arrayOf","Category","isRequired","number","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/TranscriptManagerFrontEnd/src/components/ResultTable.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/ResultTable.css'; \r\n\r\nconst ResultTable = ({ data, totalEducators }) => {\r\n  const { queried_data, educator_name, notes } = data; \r\n\r\n  if (!queried_data || queried_data.length === 0) {\r\n    return <p className=\"no-results\">No results to display. Make sure the correct name is entered or try searching with different criteria.</p>;\r\n  }\r\n\r\n  // Function to count the total number of valid \"Course Details\" (excluding \"N/A\")\r\n  const totalCourseDetails = queried_data.reduce(\r\n    (count, row) => ( row[\"Course Details\"] !== \"N/A\" ? count + 1 : count ), \r\n    0\r\n  );\r\n\r\n  // Function to format notes into multiple lines (Splitting at numbers or manually adding breaks)\r\n  const formattedNotes = notes\r\n    .replace(/(\\d+\\.)/g, \"\\n$1\")\r\n    .split(\"\\n\") \r\n    .map((line, index) => <p key={index}>{line.trim()}</p>);\r\n\r\n  return (\r\n    <div className=\"result-table-container\">\r\n      <label className=\"educator-label\">\r\n        {educator_name ? educator_name : `Total Unique Faculties: ${totalEducators}`}\r\n      </label>\r\n      \r\n      <table className=\"result-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Category</th>\r\n            <th>Course Details</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {queried_data.map((row, index) => (\r\n            <tr key={index}>\r\n              <td>{row[\"Category\"]}</td>\r\n              <td>{row[\"Course Details\"]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Render total count of valid \"Course Details\" */}\r\n      <div className=\"total-course-count\">\r\n        <h3>Total Valid Courses: {totalCourseDetails}</h3>\r\n      </div>\r\n      \r\n      {/* Render formatted notes */}\r\n      {formattedNotes && <div className=\"notes\"><ul>{formattedNotes}</ul></div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Define prop types for type safety\r\nResultTable.propTypes = {\r\n  data: PropTypes.shape({\r\n    educator_name: PropTypes.string,\r\n    queried_data: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        Category: PropTypes.string.isRequired,\r\n        \"Course Details\": PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    notes: PropTypes.string,\r\n  }).isRequired,\r\n  totalEducators: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ResultTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchExistingData } from './api'; // 仅保留必要的后端接口\nimport TableComponent from './components/TableComponent'; // 表格组件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]); // 存储表格数据\n\n  // 页面加载时获取数据\n  useEffect(() => {\n    const loadData = async () => {\n      const result = await fetchExistingData(); // 从后端获取数据\n      setData(result);\n    };\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transcript Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableComponent, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchExistingData","TableComponent","jsxDEV","_jsxDEV","App","_s","data","setData","loadData","result","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchExistingData } from './api'; // 仅保留必要的后端接口\nimport TableComponent from './components/TableComponent'; // 表格组件\n\nfunction App() {\n    const [data, setData] = useState([]); // 存储表格数据\n\n    // 页面加载时获取数据\n    useEffect(() => {\n        const loadData = async () => {\n            const result = await fetchExistingData(); // 从后端获取数据\n            setData(result);\n        };\n        loadData();\n    }, []);\n\n    return (\n        <div style={{ textAlign: 'center', padding: '20px' }}>\n            <h1>Transcript Manager</h1>\n            {/* 仅启用表格组件 */}\n            <TableComponent data={data} />\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,OAAO,CAAC,CAAC;AAC3C,OAAOC,cAAc,MAAM,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,MAAM,GAAG,MAAMT,iBAAiB,CAAC,CAAC,CAAC,CAAC;MAC1CO,OAAO,CAACE,MAAM,CAAC;IACnB,CAAC;IACDD,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKO,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjDV,OAAA;MAAAU,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3Bd,OAAA,CAACF,cAAc;MAACK,IAAI,EAAEA;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEd;AAACZ,EAAA,CAnBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
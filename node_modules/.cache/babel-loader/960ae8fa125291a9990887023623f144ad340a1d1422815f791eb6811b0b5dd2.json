{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\components\\\\ExportButtons.js\";\nimport React from 'react';\nimport { saveAs } from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExportButtons({\n  data\n}) {\n  // 导出 CSV 文件\n  const exportToCSV = () => {\n    const csvRows = [];\n    csvRows.push('Student Name,University,Program,Course Name,Course Code,Grade');\n    data.forEach(row => {\n      csvRows.push(`${row.name},${row.university},${row.program},${row.courseName},${row.courseCode},${row.grade}`);\n    });\n    const csvBlob = new Blob([csvRows.join('\\n')], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    saveAs(csvBlob, 'transcript.csv');\n  };\n\n  // 导出 Excel 文件\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const excelBlob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    saveAs(excelBlob, 'transcript.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToCSV,\n      style: {\n        marginRight: '10px',\n        padding: '10px 20px'\n      },\n      children: \"Export CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToExcel,\n      style: {\n        padding: '10px 20px'\n      },\n      children: \"Export Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c = ExportButtons;\nexport default ExportButtons;\nvar _c;\n$RefreshReg$(_c, \"ExportButtons\");","map":{"version":3,"names":["React","saveAs","XLSX","jsxDEV","_jsxDEV","ExportButtons","data","exportToCSV","csvRows","push","forEach","row","name","university","program","courseName","courseCode","grade","csvBlob","Blob","join","type","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","excelBlob","children","onClick","style","marginRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/components/ExportButtons.js"],"sourcesContent":["import React from 'react';\r\nimport { saveAs } from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nfunction ExportButtons({ data }) {\r\n    // 导出 CSV 文件\r\n    const exportToCSV = () => {\r\n        const csvRows = [];\r\n        csvRows.push('Student Name,University,Program,Course Name,Course Code,Grade');\r\n        data.forEach((row) => {\r\n            csvRows.push(`${row.name},${row.university},${row.program},${row.courseName},${row.courseCode},${row.grade}`);\r\n        });\r\n        const csvBlob = new Blob([csvRows.join('\\n')], { type: 'text/csv;charset=utf-8;' });\r\n        saveAs(csvBlob, 'transcript.csv');\r\n    };\r\n\r\n    // 导出 Excel 文件\r\n    const exportToExcel = () => {\r\n        const worksheet = XLSX.utils.json_to_sheet(data);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\r\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n        const excelBlob = new Blob([excelBuffer], { type: 'application/octet-stream' });\r\n        saveAs(excelBlob, 'transcript.xlsx');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={exportToCSV} style={{ marginRight: '10px', padding: '10px 20px' }}>\r\n                Export CSV\r\n            </button>\r\n            <button onClick={exportToExcel} style={{ padding: '10px 20px' }}>\r\n                Export Excel\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExportButtons;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,YAAY;AACnC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC7B;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,OAAO,GAAG,EAAE;IAClBA,OAAO,CAACC,IAAI,CAAC,+DAA+D,CAAC;IAC7EH,IAAI,CAACI,OAAO,CAAEC,GAAG,IAAK;MAClBH,OAAO,CAACC,IAAI,CAAC,GAAGE,GAAG,CAACC,IAAI,IAAID,GAAG,CAACE,UAAU,IAAIF,GAAG,CAACG,OAAO,IAAIH,GAAG,CAACI,UAAU,IAAIJ,GAAG,CAACK,UAAU,IAAIL,GAAG,CAACM,KAAK,EAAE,CAAC;IACjH,CAAC,CAAC;IACF,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,CAACX,OAAO,CAACY,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;MAAEC,IAAI,EAAE;IAA0B,CAAC,CAAC;IACnFpB,MAAM,CAACiB,OAAO,EAAE,gBAAgB,CAAC;EACrC,CAAC;;EAED;EACA,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAGrB,IAAI,CAACsB,KAAK,CAACC,aAAa,CAACnB,IAAI,CAAC;IAChD,MAAMoB,QAAQ,GAAGxB,IAAI,CAACsB,KAAK,CAACG,QAAQ,CAAC,CAAC;IACtCzB,IAAI,CAACsB,KAAK,CAACI,iBAAiB,CAACF,QAAQ,EAAEH,SAAS,EAAE,aAAa,CAAC;IAChE,MAAMM,WAAW,GAAG3B,IAAI,CAAC4B,KAAK,CAACJ,QAAQ,EAAE;MAAEK,QAAQ,EAAE,MAAM;MAAEV,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC7E,MAAMW,SAAS,GAAG,IAAIb,IAAI,CAAC,CAACU,WAAW,CAAC,EAAE;MAAER,IAAI,EAAE;IAA2B,CAAC,CAAC;IAC/EpB,MAAM,CAAC+B,SAAS,EAAE,iBAAiB,CAAC;EACxC,CAAC;EAED,oBACI5B,OAAA;IAAA6B,QAAA,gBACI7B,OAAA;MAAQ8B,OAAO,EAAE3B,WAAY;MAAC4B,KAAK,EAAE;QAAEC,WAAW,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAY,CAAE;MAAAJ,QAAA,EAAC;IAEpF;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrC,OAAA;MAAQ8B,OAAO,EAAEZ,aAAc;MAACa,KAAK,EAAE;QAAEE,OAAO,EAAE;MAAY,CAAE;MAAAJ,QAAA,EAAC;IAEjE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACC,EAAA,GAhCQrC,aAAa;AAkCtB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
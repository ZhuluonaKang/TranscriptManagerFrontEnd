{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\components\\\\ExportButtons.js\";\nimport React from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportButtons = ({\n  data\n}) => {\n  const exportToCSV = () => {\n    const header = ['Column 1', 'Column 2', 'Column 3', 'Column 4'];\n    const rows = data.map(row => [row.column1, row.column2, row.column3, row.column4]);\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n    csvContent += header.join(',') + \"\\r\\n\";\n    rows.forEach(rowArray => {\n      csvContent += rowArray.join(',') + \"\\r\\n\";\n    });\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"table_data.csv\");\n    link.click();\n  };\n  const exportToExcel = () => {\n    const header = ['Column 1', 'Column 2', 'Column 3', 'Column 4'];\n    const rows = data.map(row => [row.column1, row.column2, row.column3, row.column4]);\n    const ws = XLSX.utils.aoa_to_sheet([header, ...rows]);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, 'table_data.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"export-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"export-btn\",\n      onClick: exportToCSV,\n      children: \"Export as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"export-btn\",\n      onClick: exportToExcel,\n      children: \"Export as Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = ExportButtons;\nexport default ExportButtons;\nvar _c;\n$RefreshReg$(_c, \"ExportButtons\");","map":{"version":3,"names":["React","XLSX","jsxDEV","_jsxDEV","ExportButtons","data","exportToCSV","header","rows","map","row","column1","column2","column3","column4","csvContent","join","forEach","rowArray","encodedUri","encodeURI","link","document","createElement","setAttribute","click","exportToExcel","ws","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/components/ExportButtons.js"],"sourcesContent":["import React from 'react';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ExportButtons = ({ data }) => {\r\n    const exportToCSV = () => {\r\n        const header = ['Column 1', 'Column 2', 'Column 3', 'Column 4'];\r\n        const rows = data.map((row) => [\r\n            row.column1,\r\n            row.column2,\r\n            row.column3,\r\n            row.column4,\r\n        ]);\r\n\r\n        let csvContent = \"data:text/csv;charset=utf-8,\";\r\n        csvContent += header.join(',') + \"\\r\\n\";\r\n        rows.forEach((rowArray) => {\r\n            csvContent += rowArray.join(',') + \"\\r\\n\";\r\n        });\r\n\r\n        const encodedUri = encodeURI(csvContent);\r\n        const link = document.createElement(\"a\");\r\n        link.setAttribute(\"href\", encodedUri);\r\n        link.setAttribute(\"download\", \"table_data.csv\");\r\n        link.click();\r\n    };\r\n\r\n    const exportToExcel = () => {\r\n        const header = ['Column 1', 'Column 2', 'Column 3', 'Column 4'];\r\n        const rows = data.map((row) => [\r\n            row.column1,\r\n            row.column2,\r\n            row.column3,\r\n            row.column4,\r\n        ]);\r\n\r\n        const ws = XLSX.utils.aoa_to_sheet([header, ...rows]);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n        XLSX.writeFile(wb, 'table_data.xlsx');\r\n    };\r\n\r\n    return (\r\n        <div className=\"export-container\">\r\n            <button className=\"export-btn\" onClick={exportToCSV}>\r\n                Export as CSV\r\n            </button>\r\n            <button className=\"export-btn\" onClick={exportToExcel}>\r\n                Export as Excel\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExportButtons;\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,MAAM,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;IAC/D,MAAMC,IAAI,GAAGH,IAAI,CAACI,GAAG,CAAEC,GAAG,IAAK,CAC3BA,GAAG,CAACC,OAAO,EACXD,GAAG,CAACE,OAAO,EACXF,GAAG,CAACG,OAAO,EACXH,GAAG,CAACI,OAAO,CACd,CAAC;IAEF,IAAIC,UAAU,GAAG,8BAA8B;IAC/CA,UAAU,IAAIR,MAAM,CAACS,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM;IACvCR,IAAI,CAACS,OAAO,CAAEC,QAAQ,IAAK;MACvBH,UAAU,IAAIG,QAAQ,CAACF,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM;IAC7C,CAAC,CAAC;IAEF,MAAMG,UAAU,GAAGC,SAAS,CAACL,UAAU,CAAC;IACxC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,YAAY,CAAC,MAAM,EAAEL,UAAU,CAAC;IACrCE,IAAI,CAACG,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC;IAC/CH,IAAI,CAACI,KAAK,CAAC,CAAC;EAChB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMnB,MAAM,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;IAC/D,MAAMC,IAAI,GAAGH,IAAI,CAACI,GAAG,CAAEC,GAAG,IAAK,CAC3BA,GAAG,CAACC,OAAO,EACXD,GAAG,CAACE,OAAO,EACXF,GAAG,CAACG,OAAO,EACXH,GAAG,CAACI,OAAO,CACd,CAAC;IAEF,MAAMa,EAAE,GAAG1B,IAAI,CAAC2B,KAAK,CAACC,YAAY,CAAC,CAACtB,MAAM,EAAE,GAAGC,IAAI,CAAC,CAAC;IACrD,MAAMsB,EAAE,GAAG7B,IAAI,CAAC2B,KAAK,CAACG,QAAQ,CAAC,CAAC;IAChC9B,IAAI,CAAC2B,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,QAAQ,CAAC;IAC9C1B,IAAI,CAACgC,SAAS,CAACH,EAAE,EAAE,iBAAiB,CAAC;EACzC,CAAC;EAED,oBACI3B,OAAA;IAAK+B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BhC,OAAA;MAAQ+B,SAAS,EAAC,YAAY;MAACE,OAAO,EAAE9B,WAAY;MAAA6B,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrC,OAAA;MAAQ+B,SAAS,EAAC,YAAY;MAACE,OAAO,EAAEV,aAAc;MAAAS,QAAA,EAAC;IAEvD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACC,EAAA,GAhDIrC,aAAa;AAkDnB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
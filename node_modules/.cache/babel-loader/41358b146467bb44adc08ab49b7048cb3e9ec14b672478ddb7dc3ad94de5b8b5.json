{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\components\\\\ExportButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo } from 'react';\nimport { CSVLink } from 'react-csv';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportButtons = ({\n  data\n}) => {\n  _s();\n  // Ensure Hooks are always called\n  const hasData = data && data.length > 0;\n  const headers = useMemo(() => [{\n    label: 'Educator',\n    key: 'educatorname'\n  }, {\n    label: 'Course Name',\n    key: 'course_name'\n  }, {\n    label: 'Credits Earned',\n    key: 'credits_earned'\n  }, {\n    label: 'Grade',\n    key: 'grade'\n  }, {\n    label: 'Category',\n    key: 'should_be_category'\n  }], []);\n  const exportToExcel = useCallback(() => {\n    if (!hasData) return;\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\n    XLSX.writeFile(workbook, 'exported_data.xlsx');\n  }, [data, hasData]);\n  if (!hasData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No data available to export.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"export-container\",\n    children: [/*#__PURE__*/_jsxDEV(CSVLink, {\n      data: data,\n      headers: headers,\n      filename: \"exported_data.csv\",\n      className: \"export-btn\",\n      children: \"Export as CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"export-btn\",\n      onClick: exportToExcel,\n      children: \"Export as Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ExportButtons, \"bHU5qXZy8MMJ4aPz7xYv/+aIjDM=\");\n_c = ExportButtons;\nexport default _c2 = /*#__PURE__*/React.memo(ExportButtons);\nvar _c, _c2;\n$RefreshReg$(_c, \"ExportButtons\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useCallback","useMemo","CSVLink","XLSX","jsxDEV","_jsxDEV","ExportButtons","data","_s","hasData","length","headers","label","key","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filename","onClick","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/components/ExportButtons.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\r\nimport { CSVLink } from 'react-csv';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ExportButtons = ({ data }) => {\r\n    // Ensure Hooks are always called\r\n    const hasData = data && data.length > 0;\r\n    \r\n    const headers = useMemo(() => [\r\n        { label: 'Educator', key: 'educatorname' },\r\n        { label: 'Course Name', key: 'course_name' },\r\n        { label: 'Credits Earned', key: 'credits_earned' },\r\n        { label: 'Grade', key: 'grade' },\r\n        { label: 'Category', key: 'should_be_category' }\r\n    ], []);\r\n\r\n    const exportToExcel = useCallback(() => {\r\n        if (!hasData) return;\r\n        const worksheet = XLSX.utils.json_to_sheet(data);\r\n        const workbook = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Transcripts');\r\n        XLSX.writeFile(workbook, 'exported_data.xlsx');\r\n    }, [data, hasData]);\r\n\r\n    if (!hasData) return <p>No data available to export.</p>;\r\n\r\n    return (\r\n        <div className=\"export-container\">\r\n            <CSVLink data={data} headers={headers} filename=\"exported_data.csv\" className=\"export-btn\">\r\n                Export as CSV\r\n            </CSVLink>\r\n            <button className=\"export-btn\" onClick={exportToExcel}>Export as Excel</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(ExportButtons);\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACnD,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChC;EACA,MAAMC,OAAO,GAAGF,IAAI,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC;EAEvC,MAAMC,OAAO,GAAGV,OAAO,CAAC,MAAM,CAC1B;IAAEW,KAAK,EAAE,UAAU;IAAEC,GAAG,EAAE;EAAe,CAAC,EAC1C;IAAED,KAAK,EAAE,aAAa;IAAEC,GAAG,EAAE;EAAc,CAAC,EAC5C;IAAED,KAAK,EAAE,gBAAgB;IAAEC,GAAG,EAAE;EAAiB,CAAC,EAClD;IAAED,KAAK,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,EAChC;IAAED,KAAK,EAAE,UAAU;IAAEC,GAAG,EAAE;EAAqB,CAAC,CACnD,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAGd,WAAW,CAAC,MAAM;IACpC,IAAI,CAACS,OAAO,EAAE;IACd,MAAMM,SAAS,GAAGZ,IAAI,CAACa,KAAK,CAACC,aAAa,CAACV,IAAI,CAAC;IAChD,MAAMW,QAAQ,GAAGf,IAAI,CAACa,KAAK,CAACG,QAAQ,CAAC,CAAC;IACtChB,IAAI,CAACa,KAAK,CAACI,iBAAiB,CAACF,QAAQ,EAAEH,SAAS,EAAE,aAAa,CAAC;IAChEZ,IAAI,CAACkB,SAAS,CAACH,QAAQ,EAAE,oBAAoB,CAAC;EAClD,CAAC,EAAE,CAACX,IAAI,EAAEE,OAAO,CAAC,CAAC;EAEnB,IAAI,CAACA,OAAO,EAAE,oBAAOJ,OAAA;IAAAiB,QAAA,EAAG;EAA4B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAExD,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC7BjB,OAAA,CAACH,OAAO;MAACK,IAAI,EAAEA,IAAK;MAACI,OAAO,EAAEA,OAAQ;MAACiB,QAAQ,EAAC,mBAAmB;MAACD,SAAS,EAAC,YAAY;MAAAL,QAAA,EAAC;IAE3F;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACVrB,OAAA;MAAQsB,SAAS,EAAC,YAAY;MAACE,OAAO,EAAEf,aAAc;MAAAQ,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEd,CAAC;AAAClB,EAAA,CA9BIF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAgCnB,eAAAyB,GAAA,gBAAehC,KAAK,CAACiC,IAAI,CAAC1B,aAAa,CAAC;AAAC,IAAAwB,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
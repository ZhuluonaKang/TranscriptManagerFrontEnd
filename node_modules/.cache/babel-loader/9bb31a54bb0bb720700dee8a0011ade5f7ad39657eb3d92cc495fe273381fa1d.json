{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\src\\\\pages\\\\QueryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TableComponent from '../components/TableComponent';\nimport SearchComponent from '../components/SearchComponent';\nimport ExportButtons from '../components/ExportButtons';\nimport NotificationBar from '../components/NotificationBar';\nimport { fetchExistingData, querySearchData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QueryPage() {\n  _s();\n  const [data, setData] = useState([]);\n  const [originalData, setOriginalData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [notification, setNotification] = useState('');\n  const [notificationType, setNotificationType] = useState('');\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const result = await fetchExistingData();\n        setData(result);\n        setOriginalData(result);\n        setNotification('Data loaded successfully.');\n        setNotificationType('success');\n      } catch (error) {\n        setNotification('Error loading data.');\n        setNotificationType('error');\n      }\n    };\n    loadData();\n  }, []);\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) {\n      setData(originalData);\n      setNotification('Search reset to original data.');\n      setNotificationType('success');\n    } else {\n      try {\n        const result = await querySearchData({\n          query: searchQuery\n        });\n        setData(result);\n        setNotification('Search completed successfully.');\n        setNotificationType('success');\n      } catch (error) {\n        setNotification('Error during search.');\n        setNotificationType('error');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Query and Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotificationBar, {\n      message: notification,\n      type: notificationType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchComponent, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableComponent, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExportButtons, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(QueryPage, \"uaHjDnXU9thp7QorCAVDTAIOQJc=\");\n_c = QueryPage;\nexport default QueryPage;\nvar _c;\n$RefreshReg$(_c, \"QueryPage\");","map":{"version":3,"names":["React","useState","useEffect","TableComponent","SearchComponent","ExportButtons","NotificationBar","fetchExistingData","querySearchData","jsxDEV","_jsxDEV","QueryPage","_s","data","setData","originalData","setOriginalData","searchQuery","setSearchQuery","notification","setNotification","notificationType","setNotificationType","loadData","result","error","handleSearch","trim","query","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","message","type","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/src/pages/QueryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TableComponent from '../components/TableComponent';\r\nimport SearchComponent from '../components/SearchComponent';\r\nimport ExportButtons from '../components/ExportButtons';\r\nimport NotificationBar from '../components/NotificationBar';\r\nimport { fetchExistingData, querySearchData } from '../api';\r\n\r\nfunction QueryPage() {\r\n    const [data, setData] = useState([]);\r\n    const [originalData, setOriginalData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [notification, setNotification] = useState('');\r\n    const [notificationType, setNotificationType] = useState('');\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            try {\r\n                const result = await fetchExistingData();\r\n                setData(result);\r\n                setOriginalData(result);\r\n                setNotification('Data loaded successfully.');\r\n                setNotificationType('success');\r\n            } catch (error) {\r\n                setNotification('Error loading data.');\r\n                setNotificationType('error');\r\n            }\r\n        };\r\n        loadData();\r\n    }, []);\r\n\r\n    const handleSearch = async () => {\r\n        if (!searchQuery.trim()) {\r\n            setData(originalData);\r\n            setNotification('Search reset to original data.');\r\n            setNotificationType('success');\r\n        } else {\r\n            try {\r\n                const result = await querySearchData({ query: searchQuery });\r\n                setData(result);\r\n                setNotification('Search completed successfully.');\r\n                setNotificationType('success');\r\n            } catch (error) {\r\n                setNotification('Error during search.');\r\n                setNotificationType('error');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center', padding: '20px' }}>\r\n            <h1>Query and Download</h1>\r\n            <NotificationBar message={notification} type={notificationType} />\r\n            <SearchComponent\r\n                searchQuery={searchQuery}\r\n                setSearchQuery={setSearchQuery}\r\n                handleSearch={handleSearch}\r\n            />\r\n            <TableComponent data={data} />\r\n            <ExportButtons data={data} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QueryPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\76064\\\\transcript-manager\\\\TranscriptManagerFrontEnd\\\\src\\\\pages\\\\QueryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { searchData } from '../apiServices';\nimport NotificationBar from '../components/NotificationBar';\nimport SearchCriteria from '../components/SearchCriteria';\nimport ResultTable from '../components/ResultTable';\nimport '../styles/QueryPage.css';\nimport '../styles/ReturnButton.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QueryPage = () => {\n  _s();\n  const [criteria, setCriteria] = useState({\n    name: '',\n    courseCategory: '',\n    educationLevel: []\n  }); // State for search criteria\n  const [results, setResults] = useState([]); // State to store search results\n  const [notification, setNotification] = useState('');\n  const [notificationType, setNotificationType] = useState(null);\n\n  // Function to count the unique educators \n  const countTotalEducators = () => {\n    if (!results.educator_name && results.queried_data && results.queried_data.length > 0) {\n      const educatorSet = new Set();\n      results.queried_data.forEach(row => {\n        const match = row[\"Course Details\"].match(/^(.+?): /); // Extract educator name before \":\"\n        if (match) {\n          educatorSet.add(match[1].trim()); // Add unique educator names\n        }\n      });\n      return educatorSet.size;\n    }\n    return 0;\n  };\n\n  // Calculate before rendering ResultTable\n  const totalEducators = countTotalEducators();\n\n  // Handles the search request\n  const handleSearch = useCallback(async () => {\n    if (!criteria.name.trim() && !criteria.courseCategory && criteria.educationLevel.length === 0) {\n      setResults([]); // Clear previous results if no criteria is entered\n      return;\n    }\n    try {\n      const searchResults = await searchData(criteria); // Call API with criteria\n      setResults(searchResults); // Store the response data\n      setNotification('Search completed successfully.');\n      setNotificationType('success');\n    } catch (error) {\n      setResults([]);\n      setNotification('Error during search.');\n      setNotificationType('error');\n    }\n  }, [criteria]);\n\n  // Handles the download request\n  const handleDownload = () => {\n    if (!results.queried_data || results.queried_data.length === 0) {\n      setNotification('No data available to download.');\n      setNotificationType('error');\n      return;\n    }\n    let fileName;\n    let csvHeaders;\n    if (!results.educator_name) {\n      // If educator_name is empty, use totalEducators\n      fileName = \"Qualifications_Worksheet.csv\";\n      csvHeaders = `\"Total Faculty Count\",\"${totalEducators}\"\\n`;\n    } else {\n      // If educator_name exists, format filename and headers\n      const name = results.educator_name;\n      fileName = `${name.replace(/\\s+/g, '_')}_Qualifications_Worksheet.csv`;\n      csvHeaders = `\"Faculty's Name\",\"${results.educator_name}\"\\n`;\n    }\n\n    // Convert search results to CSV\n    const csvRows = results.queried_data.map(row => Object.values(row).map(value => `\"${value}\"`).join(\",\")) // Ensure CSV-safe formatting\n    .join(\"\\n\");\n    const csvContent = csvHeaders + csvRows;\n\n    // Create a Blob and download the CSV\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n\n    // Create and trigger a download link\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', fileName);\n    document.body.appendChild(link);\n    link.click();\n\n    // Clean up by removing the link\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url); // Free up memory\n\n    setNotification('CSV downloaded successfully.');\n    setNotificationType('success');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Query and Download Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), notification && notificationType && /*#__PURE__*/_jsxDEV(NotificationBar, {\n      message: notification,\n      type: notificationType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchCriteria, {\n      criteria: criteria,\n      setCriteria: setCriteria,\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), results.queried_data && results.queried_data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ResultTable, {\n        data: results,\n        totalEducators: totalEducators\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"export-btn\",\n        onClick: handleDownload,\n        children: \"Export as CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryPage, \"TZnYrnZO/pTXv99u3Nzpv7GBqt0=\");\n_c = QueryPage;\nexport default QueryPage;\nvar _c;\n$RefreshReg$(_c, \"QueryPage\");","map":{"version":3,"names":["React","useCallback","useState","searchData","NotificationBar","SearchCriteria","ResultTable","jsxDEV","_jsxDEV","Fragment","_Fragment","QueryPage","_s","criteria","setCriteria","name","courseCategory","educationLevel","results","setResults","notification","setNotification","notificationType","setNotificationType","countTotalEducators","educator_name","queried_data","length","educatorSet","Set","forEach","row","match","add","trim","size","totalEducators","handleSearch","searchResults","error","handleDownload","fileName","csvHeaders","replace","csvRows","map","Object","values","value","join","csvContent","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","className","children","_jsxFileName","lineNumber","columnNumber","message","data","onClick","_c","$RefreshReg$"],"sources":["C:/Users/76064/transcript-manager/TranscriptManagerFrontEnd/src/pages/QueryPage.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { searchData } from '../apiServices'\r\nimport NotificationBar from '../components/NotificationBar';\r\nimport SearchCriteria from '../components/SearchCriteria';\r\nimport ResultTable from '../components/ResultTable';\r\nimport '../styles/QueryPage.css';\r\nimport '../styles/ReturnButton.css'; \r\n\r\n\r\nconst QueryPage = () => {\r\n  const [criteria, setCriteria] = useState({ \r\n    name: '',\r\n    courseCategory: '',\r\n    educationLevel: [],\r\n  }); // State for search criteria\r\n  const [results, setResults] = useState([]); // State to store search results\r\n  const [notification, setNotification] = useState('');\r\n  const [notificationType, setNotificationType] = useState(null);\r\n\r\n  // Function to count the unique educators \r\n  const countTotalEducators = () => {\r\n    if (!results.educator_name && results.queried_data && results.queried_data.length > 0) {\r\n      const educatorSet = new Set();\r\n\r\n      results.queried_data.forEach((row) => {\r\n        const match = row[\"Course Details\"].match(/^(.+?): /); // Extract educator name before \":\"\r\n        if (match) {\r\n          educatorSet.add(match[1].trim()); // Add unique educator names\r\n        }\r\n      });\r\n      return educatorSet.size;\r\n    }\r\n    return 0;\r\n  };\r\n  \r\n  // Calculate before rendering ResultTable\r\n  const totalEducators = countTotalEducators(); \r\n    \r\n  // Handles the search request\r\n  const handleSearch = useCallback(async () => {\r\n    if (!criteria.name.trim() && !criteria.courseCategory && criteria.educationLevel.length === 0) {\r\n      setResults([]); // Clear previous results if no criteria is entered\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const searchResults = await searchData(criteria); // Call API with criteria\r\n      setResults(searchResults); // Store the response data\r\n      setNotification('Search completed successfully.');\r\n      setNotificationType('success');\r\n    } catch (error) {\r\n      setResults([]);\r\n      setNotification('Error during search.');\r\n      setNotificationType('error');\r\n    }\r\n  }, [criteria]);\r\n\r\n  // Handles the download request\r\n  const handleDownload = () => {\r\n    if (!results.queried_data || results.queried_data.length === 0) {\r\n      setNotification('No data available to download.');\r\n      setNotificationType('error');\r\n      return;\r\n    }\r\n\r\n    let fileName;\r\n    let csvHeaders;\r\n\r\n    if (!results.educator_name) {\r\n      // If educator_name is empty, use totalEducators\r\n      fileName = \"Qualifications_Worksheet.csv\";\r\n      csvHeaders = `\"Total Faculty Count\",\"${totalEducators}\"\\n`;\r\n    } else {\r\n      // If educator_name exists, format filename and headers\r\n      const name = results.educator_name;\r\n      fileName = `${name.replace(/\\s+/g, '_')}_Qualifications_Worksheet.csv`;\r\n      csvHeaders = `\"Faculty's Name\",\"${results.educator_name}\"\\n`;\r\n    }\r\n\r\n    // Convert search results to CSV\r\n    const csvRows = results.queried_data\r\n      .map(row => Object.values(row).map((value) => `\"${value}\"`).join(\",\")) // Ensure CSV-safe formatting\r\n      .join(\"\\n\");\r\n\r\n    const csvContent = csvHeaders + csvRows;\r\n\r\n    // Create a Blob and download the CSV\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n\r\n    // Create and trigger a download link\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.setAttribute('download', fileName);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n\r\n    // Clean up by removing the link\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url); // Free up memory\r\n\r\n    setNotification('CSV downloaded successfully.');\r\n    setNotificationType('success');\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Query and Download Data</h1>\r\n      {/* Notification Bar */}\r\n      {notification && notificationType && (\r\n        <NotificationBar message={notification} type={notificationType} />\r\n      )}\r\n\r\n      {/* Search Criteria Component */}\r\n      <SearchCriteria \r\n        criteria={criteria} \r\n        setCriteria={setCriteria} \r\n        handleSearch={handleSearch} \r\n      />\r\n\r\n      {/* Display ResultTable and export button only if results exist */}\r\n      {results.queried_data && results.queried_data.length > 0 && (\r\n        <>\r\n          <ResultTable data={results} totalEducators={totalEducators} />\r\n          <button className=\"export-btn\" onClick={handleDownload}>\r\n            Export as CSV\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueryPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,yBAAyB;AAChC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACvCa,IAAI,EAAE,EAAE;IACRC,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE;EAClB,CAAC,CAAC,CAAC,CAAC;EACJ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAMsB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI,CAACN,OAAO,CAACO,aAAa,IAAIP,OAAO,CAACQ,YAAY,IAAIR,OAAO,CAACQ,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;MACrF,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;MAE7BX,OAAO,CAACQ,YAAY,CAACI,OAAO,CAAEC,GAAG,IAAK;QACpC,MAAMC,KAAK,GAAGD,GAAG,CAAC,gBAAgB,CAAC,CAACC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;QACvD,IAAIA,KAAK,EAAE;UACTJ,WAAW,CAACK,GAAG,CAACD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC;MACF,CAAC,CAAC;MACF,OAAON,WAAW,CAACO,IAAI;IACzB;IACA,OAAO,CAAC;EACV,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGZ,mBAAmB,CAAC,CAAC;;EAE5C;EACA,MAAMa,YAAY,GAAGpC,WAAW,CAAC,YAAY;IAC3C,IAAI,CAACY,QAAQ,CAACE,IAAI,CAACmB,IAAI,CAAC,CAAC,IAAI,CAACrB,QAAQ,CAACG,cAAc,IAAIH,QAAQ,CAACI,cAAc,CAACU,MAAM,KAAK,CAAC,EAAE;MAC7FR,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAChB;IACF;IAEA,IAAI;MACF,MAAMmB,aAAa,GAAG,MAAMnC,UAAU,CAACU,QAAQ,CAAC,CAAC,CAAC;MAClDM,UAAU,CAACmB,aAAa,CAAC,CAAC,CAAC;MAC3BjB,eAAe,CAAC,gCAAgC,CAAC;MACjDE,mBAAmB,CAAC,SAAS,CAAC;IAChC,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdpB,UAAU,CAAC,EAAE,CAAC;MACdE,eAAe,CAAC,sBAAsB,CAAC;MACvCE,mBAAmB,CAAC,OAAO,CAAC;IAC9B;EACF,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM2B,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACtB,OAAO,CAACQ,YAAY,IAAIR,OAAO,CAACQ,YAAY,CAACC,MAAM,KAAK,CAAC,EAAE;MAC9DN,eAAe,CAAC,gCAAgC,CAAC;MACjDE,mBAAmB,CAAC,OAAO,CAAC;MAC5B;IACF;IAEA,IAAIkB,QAAQ;IACZ,IAAIC,UAAU;IAEd,IAAI,CAACxB,OAAO,CAACO,aAAa,EAAE;MAC1B;MACAgB,QAAQ,GAAG,8BAA8B;MACzCC,UAAU,GAAG,0BAA0BN,cAAc,KAAK;IAC5D,CAAC,MAAM;MACL;MACA,MAAMrB,IAAI,GAAGG,OAAO,CAACO,aAAa;MAClCgB,QAAQ,GAAG,GAAG1B,IAAI,CAAC4B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,+BAA+B;MACtED,UAAU,GAAG,qBAAqBxB,OAAO,CAACO,aAAa,KAAK;IAC9D;;IAEA;IACA,MAAMmB,OAAO,GAAG1B,OAAO,CAACQ,YAAY,CACjCmB,GAAG,CAACd,GAAG,IAAIe,MAAM,CAACC,MAAM,CAAChB,GAAG,CAAC,CAACc,GAAG,CAAEG,KAAK,IAAK,IAAIA,KAAK,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAAA,CACtEA,IAAI,CAAC,IAAI,CAAC;IAEb,MAAMC,UAAU,GAAGR,UAAU,GAAGE,OAAO;;IAEvC;IACA,MAAMO,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAW,CAAC,CAAC;IACzD,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;;IAE5C;IACA,MAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;IACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAErB,QAAQ,CAAC;IACvCkB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;;IAEZ;IACAN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;IAC/BH,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC,CAAC,CAAC;;IAEjCjC,eAAe,CAAC,8BAA8B,CAAC;IAC/CE,mBAAmB,CAAC,SAAS,CAAC;EAChC,CAAC;EAED,oBACEf,OAAA;IAAK4D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB7D,OAAA;MAAA6D,QAAA,EAAI;IAAuB;MAAA5B,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/BpD,YAAY,IAAIE,gBAAgB,iBAC/Bd,OAAA,CAACJ,eAAe;MAACqE,OAAO,EAAErD,YAAa;MAACiC,IAAI,EAAE/B;IAAiB;MAAAmB,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAClE,eAGDhE,OAAA,CAACH,cAAc;MACbQ,QAAQ,EAAEA,QAAS;MACnBC,WAAW,EAAEA,WAAY;MACzBuB,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAA6B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EAGDtD,OAAO,CAACQ,YAAY,IAAIR,OAAO,CAACQ,YAAY,CAACC,MAAM,GAAG,CAAC,iBACtDnB,OAAA,CAAAE,SAAA;MAAA2D,QAAA,gBACE7D,OAAA,CAACF,WAAW;QAACoE,IAAI,EAAExD,OAAQ;QAACkB,cAAc,EAAEA;MAAe;QAAAK,QAAA,EAAA6B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9DhE,OAAA;QAAQ4D,SAAS,EAAC,YAAY;QAACO,OAAO,EAAEnC,cAAe;QAAA6B,QAAA,EAAC;MAExD;QAAA5B,QAAA,EAAA6B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH;EAAA;IAAA/B,QAAA,EAAA6B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAA5D,EAAA,CA1HKD,SAAS;AAAAiE,EAAA,GAATjE,SAAS;AA4Hf,eAAeA,SAAS;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}